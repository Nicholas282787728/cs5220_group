# aggregate function breakdown results
for f in profiling*; do grep "...anchor_topic_profile.jl" $f | awk "{arr[\$3]+=\$1} END {for (a in arr) if (a != \"mine_topics\") printf(\"${f}\t%s\t%s\n\", a, arr[a]/arr[\"mine_topics\"]) }"; done | awk 'match($0, /profiling_yelp_[0-9]_cores/) {arr[substr($1, RSTART, RLENGTH)][$2]+=$3; } END { for (a in arr) for (b in arr[a]) printf("%s\t%s\t%s\n", a, b, arr[a][b]/3) }' | sort -k 1,1 -k 3rn,3 | sed 's/profiling_yelp_//g' | sed 's/_cores//g' > func_breakdown_graphable_results.tsv

# aggregate line breakdown results
for f in profiling*; do grep "...anchor_topic_profile.jl" $f | while read v_count v_file v_function v_line; do thelinefunc=$(sed "${v_line}q;d" ../anchor_topic_profile.jl | tr -d ' '); echo -e "$v_count\t$v_file\t$v_function\t$v_line\t$thelinefunc"; done | awk "{arrfunc[\$3]+=\$1; arrfuncline[\$5]=\$1} END { for (a in arrfuncline) print \"${f}\", a, arrfuncline[a]/arrfunc[\"mine_topics\"] }"; done | awk 'match($1, /profiling_yelp_[0-9]_cores/) {arr[substr($1, RSTART, RLENGTH)][$2]+=$3; } END { for (a in arr) for (b in arr[a]) printf("%s\t%s\t%s\n", a, b, arr[a][b]/3) }' | sort -k 1,1 -k 3rn,3 | awk '($3 >= 0.05)' | sed 's/profiling_yelp_//g' | sed 's/_cores//g' > line_breakdown_graphable_results.tsv
